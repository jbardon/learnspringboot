<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.4.RELEASE</version>
        <relativePath/>
    </parent>

    <groupId>learnspringboot</groupId>
    <artifactId>parent-pom</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>Parent</name>
    <description>Parent pom for all projects</description>

    <!--
        Define project external dependencies
        Also inherit from the spring-boot-starter
    -->
    <properties>
        <java.version>1.8</java.version>
        <version.lombok>1.18.6</version.lombok>
        <version.h2>1.4.199</version.h2>
        <version.querydsl>4.2.1</version.querydsl>
        <version.springboot-cloud>Greenwich.RELEASE</version.springboot-cloud>

        <version.plugin.querydsl>1.1.3</version.plugin.querydsl>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Local database to avoid installing a real DB -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${version.h2}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>com.querydsl</groupId>
                <artifactId>querydsl-apt</artifactId>
                <version>${version.querydsl}</version>
                <scope>provided</scope> <!-- Not include in JAR -->
            </dependency>
            <dependency>
                <groupId>com.querydsl</groupId>
                <artifactId>querydsl-jpa</artifactId>
                <version>${version.querydsl}</version>
            </dependency>
            <dependency> <!-- Load versions for all projects -->
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${version.springboot-cloud}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Childs automatically have those dependencies-->
    <dependencies>
        <!--
            Starters doesn't contains code,
            It's only gathering required dependencies for a feature
            They also handles external dependencies versions and compatibilities
        -->

        <!-- Automatic health check endpoint -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Automatic autocompletion for custom properties in .properties files -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${version.lombok}</version>
        </dependency>

        <!--
            Fetching remote config with Spring Cloud Config
            see infra/config-server/src/main/resources/configs
        -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>

        <!--
            Fetching services addresses from Eureka registry
            mainly for Feign clients

            Auto-register apps in the registry and gives ability to be a client
        -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>

        <!-- Feign client for all projects (@EnableFeignClients and @FeignClient) -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--
        maven-failsafe-plugin runs integration tests and executes
        the verify goal instead of unit test.
        This is because integration tests are expensive to run

        Gives access to commands such as: mvn spring-boot:run
        - mvn spring-boot:help -Ddetail=true
        - mvn spring-boot:run -Dspring-boot.run.arguments=- -debug
    -->
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.mysema.maven</groupId>
                    <artifactId>apt-maven-plugin</artifactId>
                    <version>${version.plugin.querydsl}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>process</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>target/generated-sources/java</outputDirectory>
                                <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>